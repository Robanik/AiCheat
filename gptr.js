// gptr.js - –ª–æ–≥–∏–∫–∞ –±–æ—Ç–∞
function getBotResponse(userMessage, callback) {
    // –≠—Ç–∞–ø—ã –æ–±–¥—É–º—ã–≤–∞–Ω–∏—è
    const stages = [
        "ü§ñ –ß–∏—Ç–∞—é —Ç–≤–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ...",
        "ü§ñ –ü—Ä–æ–≤–µ—Ä—è—é —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è...",
        "ü§ñ –î—É–º–∞—é –Ω–∞–¥ –æ—Ç–≤–µ—Ç–æ–º..."
    ];

    let stageIndex = 0;

    // –°–æ–∑–¥–∞—ë–º "–≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π" –ø—Ä–æ—Ü–µ—Å—Å –æ–±–¥—É–º—ã–≤–∞–Ω–∏—è
    function nextStage() {
        if (stageIndex < stages.length) {
            callback(stages[stageIndex], false); // false = –µ—â—ë –Ω–µ –∫–æ–Ω–µ—á–Ω—ã–π –æ—Ç–≤–µ—Ç
            stageIndex++;
            setTimeout(nextStage, 1500); // 1.5 —Å–µ–∫ –º–µ–∂–¥—É —Å—Ç–∞–¥–∏—è–º–∏
        } else {
            // –ü–æ—Å–ª–µ —Å—Ç–∞–¥–∏–π –∏—â–µ–º –æ—Ç–≤–µ—Ç –≤ knowledge
            let response = "ü§ñ –Ø –ø–æ–∫–∞ –Ω–µ –∑–Ω–∞—é –æ—Ç–≤–µ—Ç–∞, –Ω–æ —É—á—É—Å—å!";
            for (let item of knowledge) {
                if (userMessage.toLowerCase().includes(item.question)) {
                    response = item.answer;
                    break;
                }
            }
            callback(response, true); // true = –∫–æ–Ω–µ—á–Ω—ã–π –æ—Ç–≤–µ—Ç
        }
    }

    nextStage();
}
