// –í—Å—Ç–∞–≤—å —Å—é–¥–∞ —Å–≤–æ–π OpenAI –∫–ª—é—á
const OPENAI_API_KEY = "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";

async function sendMessage() {
  const input = document.getElementById("userInput");
  const message = input.value.trim();
  if (!message) return;

  const chatMessages = document.getElementById("chatMessages");

  // –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const userMsg = document.createElement("div");
  userMsg.className = "message user-message";
  userMsg.textContent = message;
  chatMessages.appendChild(userMsg);
  input.value = "";
  chatMessages.scrollTop = chatMessages.scrollHeight;

  // –°–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞ (—Å —Å—Ç–∞–¥–∏—è–º–∏)
  const botMsg = document.createElement("div");
  botMsg.className = "message bot-message";
  botMsg.textContent = "ü§ñ –î—É–º–∞—é...";
  chatMessages.appendChild(botMsg);
  chatMessages.scrollTop = chatMessages.scrollHeight;

  // –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ ChatGPT
  try {
    const response = await fetch("https://api.openai.com/v1/chat/completions", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Authorization": `Bearer ${OPENAI_API_KEY}`
      },
      body: JSON.stringify({
        model: "gpt-3.5-turbo",
        messages: [{role: "user", content: message}],
        max_tokens: 150
      })
    });

    const data = await response.json();
    const answer = data.choices[0].message.content;

    botMsg.textContent = answer;
    chatMessages.scrollTop = chatMessages.scrollHeight;
  } catch (err) {
    botMsg.textContent = "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ ChatGPT";
    console.error(err);
  }
  }
